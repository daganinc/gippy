# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details

# Environment variables required:
# - PYPI_USER / PYPI_PASS: for publishing package to PyPi

version: 2


references:

  container: &container
    docker:
      - image: developmentseed/geolambda:1.0.0
    working_directory: ~/project

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v3-repo-{{ .Branch }}-{{ .Revision }}
        - v3-repo-{{ .Branch }}
        - v3-repo

jobs:

  checkout_code:
    <<: *container
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v3-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/project

  install_27:
    <<: *container
    steps:  
      - *restore_repo
      - restore_cache:
          keys: 
            - v3-dependencies27-{{ checksum "requirements.txt"}}
            - v3-dependencies27
      - run: |
            pip install virtualenv
            virtualenv ~/venv27
            . ~/venv27/bin/activate
            pip install -r requirements.txt
            pip install -r requirements-dev.txt
      - save_cache:
          key: v3-dependencies27-{{ checksum "requirements.txt"}}
          paths:
            - ~/venv27

  test_27:
    <<: *container
    steps:
      - *restore_repo
      - restore_cache:
          keys:
            - v3-dependencies27-{{ checksum "requirements.txt"}}
            - v3-dependencies27
      - run: |
            yum install -y swig
            . ~/venv27/bin/activate
            pip install -e . --no-cache
            cd test
            pytest --cov gippy     

  install_36:
    <<: *container
    steps:  
      - *restore_repo
      - restore_cache:
          keys: 
            - v3-dependencies36-{{ checksum "requirements.txt"}}
            - v3-dependencies36
      - run: |
            python3 -m venv ~/venv36
            . ~/venv36/bin/activate
            pip install -r requirements.txt
            pip install -r requirements-dev.txt
      - save_cache:
          key: v3-dependencies36-{{ checksum "requirements.txt"}}
          paths:
            - ~/venv36

  test_36:
    <<: *container
    steps:
      - *restore_repo
      - restore_cache:
          keys:
            - v3-dependencies36-{{ checksum "requirements.txt"}}
            - v3-dependencies36
      - run: |
            yum install -y swig
            . ~/venv36/bin/activate
            pip install . --no-cache
            cd test
            pytest --cov gippy

  deploy:
    <<: *container
    steps:
      - *restore_repo
      - restore_cache:
          keys: 
            - v3-dependencies36-{{ checksum "requirements.txt"}}
            - v3-dependencies36
      - run:
          name: Deploy
          command: |
            yum install -y swig
            . ~/venv36/bin/activate
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            VERSION=`awk -F\' '{print $2,$4}' gippy/version.py`
            pip install -e .
            git config --global user.email "matt.a.hanson@gmail.com"
            git config --global user.name "matthewhanson"
            git add -f gippy/algorithms.py gippy/algorithms_wrap.cpp gippy/gippy.py gippy/gippy_wrap.cpp
            git commit -a -m 'added swig wrappers for publishing to PyPi'
            git tag $VERSION
            git push origin $VERSION
            git clean -xfd
            python setup.py sdist
            pip install twine
            twine upload --username "${PYPI_USER}" --password "${PYPI_PASS}" dist/*


workflows:
  version: 2
  build_test_deploy:
    jobs:
      - checkout_code
      - install_36:
          requires:
            - checkout_code
      - test_36:
          requires:
            - install_36
      - deploy:
          requires:
            - test_36
          filters:
            branches:
              only: master
  build_test_27:
    jobs:
      - checkout_code
      - install_27:
          requires:
            - checkout_code
      - test_27:
          requires:
            - install_27
